/*
 * Bitcoin-app API
 *
 * Minimal API for bitcoin-app configuration
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package apiserver

// CurrencyUpdate - Data for adding currency asset to project
type CurrencyUpdate struct {

	Currency string `json:"currency"`

	ProjectId string `json:"project_id"`
}

// AssertCurrencyUpdateRequired checks if the required fields are not zero-ed
func AssertCurrencyUpdateRequired(obj CurrencyUpdate) error {
	elements := map[string]interface{}{
		"currency": obj.Currency,
		"project_id": obj.ProjectId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseCurrencyUpdateRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CurrencyUpdate (e.g. [][]CurrencyUpdate), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCurrencyUpdateRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCurrencyUpdate, ok := obj.(CurrencyUpdate)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCurrencyUpdateRequired(aCurrencyUpdate)
	})
}
