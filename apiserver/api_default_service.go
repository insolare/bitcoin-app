/*
 * Bitcoin-app API
 *
 * Minimal API for bitcoin-app configuration
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package apiserver

import (
	"context"
	"net/http"
	"errors"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// AddCurrencyToProjectPost - 
func (s *DefaultApiService) AddCurrencyToProjectPost(ctx context.Context, currencyUpdate CurrencyUpdate) (ImplResponse, error) {
	// TODO - update AddCurrencyToProjectPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddCurrencyToProjectPost method not implemented")
}

// ConfigEndpointPost - Set new endpoint
func (s *DefaultApiService) ConfigEndpointPost(ctx context.Context, configurationFieldUpdate ConfigurationFieldUpdate) (ImplResponse, error) {
	// TODO - update ConfigEndpointPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ConfigEndpointPost method not implemented")
}

// ConfigGet - Get current configuration
func (s *DefaultApiService) ConfigGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update ConfigGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Configuration{}) or use other options such as http.Ok ...
	//return Response(200, Configuration{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ConfigGet method not implemented")
}

// ConfigPollRatePost - 
func (s *DefaultApiService) ConfigPollRatePost(ctx context.Context, configurationFieldUpdate ConfigurationFieldUpdate) (ImplResponse, error) {
	// TODO - update ConfigPollRatePost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ConfigPollRatePost method not implemented")
}

// ConfigTimeoutPost - 
func (s *DefaultApiService) ConfigTimeoutPost(ctx context.Context, configurationFieldUpdate ConfigurationFieldUpdate) (ImplResponse, error) {
	// TODO - update ConfigTimeoutPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ConfigTimeoutPost method not implemented")
}
